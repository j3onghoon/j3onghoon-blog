# Generated by Django 5.2.1 on 2025-05-19 14:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='생성 일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='삭제 일시')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='사용자명')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='휴대폰')),
                ('birth_datetime', models.DateTimeField(blank=True, null=True, verbose_name='생년월일시')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='생성 일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='삭제 일시')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.category', verbose_name='상위 카테고리')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='생성 일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='삭제 일시')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category', verbose_name='카테고리')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='생성 일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='삭제 일시')),
                ('content', models.TextField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='blog.comment', verbose_name='상위 댓글')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='게시물')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='생성 일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='삭제 일시')),
                ('file', models.FileField(max_length=255, upload_to='', verbose_name='파일')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='파일명')),
                ('file_type', models.CharField(choices=[('image', '이미지'), ('video', '동영상'), ('document', '문서'), ('audio', '오디오'), ('other', '기타')], default='other', max_length=20, verbose_name='파일 유형')),
                ('mime_type', models.CharField(blank=True, max_length=100, verbose_name='MIME 유형')),
                ('size', models.PositiveIntegerField(default=0, verbose_name='파일 크기(바이트)')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='정렬 순서')),
                ('object_id', models.PositiveIntegerField(verbose_name='객체 ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='콘텐츠 타입')),
            ],
            options={
                'ordering': ['content_type', 'object_id', 'order'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='blog_attach_content_33d319_idx'), models.Index(fields=['file_type'], name='blog_attach_file_ty_4413db_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-created'], name='blog_post_created_76eb4c_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created'], name='blog_commen_created_0e6ed4_idx'),
        ),
    ]
